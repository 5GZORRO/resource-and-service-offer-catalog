# Web Server config
server.hostname    = ${OFFER_CATALOG_HOSTNAME}
server.port        = ${SERVER_PORT}
springfox.documentation.swagger.v2.path = /api-docs
server.servlet.contextPath = /tmf-api

ingress            = ${SERVER_INGRES}

# DataSource configuration
spring.datasource.driver-class-name = org.postgresql.Driver
spring.datasource.url               = jdbc:postgresql://${POSTGRES_HOSTNAME}:${POSTGRES_PORT}/postgres
spring.datasource.username          = ${POSTGRES_USER}
spring.datasource.password          = ${POSTGRES_PSW}

# General JPA properties
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql          = false

# Hibernate Specific properties
spring.jpa.properties.hibernate.format_sql = false
spring.jpa.hibernate.ddl-auto              = ${POSTGRES_MODE}

# Jackson properties
spring.jackson.date-format = it.nextworks.tmf_offering_catalog.common.config.RFC3339DateFormat
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS = false
spring.jackson.default-property-inclusion = NON_NULL

# Kafka configuration
kafka.bootstrapAddress = ${KAFKA_BOOTSTRAP_ADDRESS}
kafka.topic.offerings  = ${KAFKA_TOPIC_OFFERINGS}
kafka.topic.orders     = ${KAFKA_TOPIC_ORDERS}

# DID Service Socket
did_service.hostname     = ${DID_SERVICE_HOSTNAME}
did_service.port         = ${DID_SERVICE_PORT}
did_service.request_path = ${DID_SERVICE_REQUEST_PATH}

# SC LCM Socket
sc_lcm.hostname            = ${SC_LCM_HOSTNAME}
sc_lcm.port                = ${SC_LCM_PORT}
sc_lcm.product_offer.sc_lcm_request_path = ${SC_LCM_PRODUCT_OFFER_REQUEST_PATH}
sc_lcm.product_order.sc_lcm_request_path = ${SC_LCM_PRODUCT_ORDER_REQUEST_PATH}
sc_lcm.derivative_issue.sc_lcm_request_path = ${SC_LCM_DERIVATIVE_ISSUE_REQUEST_PATH}
sc_lcm.sla.sc_lcm_request_path           = ${SC_LCM_SLA_REQUEST_PATH}
skip_sc_lcm_post           = ${SKIP_SC_LCM_POST}

# SRSD Socket
srsd.hostname          = ${SRSD_HOSTNAME}
srsd.port              = ${SRSD_PORT}
srsd.srsd_request_path = ${SRSD_REQUEST_PATH}
skip_srsd_post         = ${SKIP_SRSD_POST}

#Crontab to update offer status to Obsolete when invalid period. Executed every day at 1:00 a.m.
cron.schedule=0 0 1 * * *